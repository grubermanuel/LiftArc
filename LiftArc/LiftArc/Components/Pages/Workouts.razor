@page "/workouts"
@using LiftArc.Models 
@using LiftArc.Services 
@inject WorkoutService WorkoutService
@rendermode InteractiveServer

<h1>üèãÔ∏è LiftArc Trainingspl√§ne</h1>

<div class="new-workout">
    <input placeholder="Name des Trainingsplans" @bind="newPlanName" />
    <button class="btn-neon" @onclick="CreateWorkout">+ Trainingsplan erstellen</button>
</div>

<hr />

@foreach (var plan in workouts)
{
    <div class="workout-card">
        <h2>@plan.Name</h2>

        @if (plan.Exercises.Any())
        {
            <ul>
                @foreach (var ex in plan.Exercises)
                {
                    <li>@ex.Name ‚Äì @ex.Sets S√§tze ‚Äì @ex.WeightKg kg</li>
                }
            </ul>
        }
        else
        {
            <p>(noch keine √úbungen)</p>
        }

        <div class="new-exercise">
            <input placeholder="√úbung" @bind="plan.NewExerciseName" />
            <input type="number" placeholder="S√§tze" @bind="plan.NewExerciseSets" />
            <input type="number" placeholder="Gewicht (kg)" @bind="plan.NewExerciseWeight" />
            <button class="btn-neon" @onclick="() => AddExercise(plan)">+ √úbung hinzuf√ºgen</button>
        </div>
    </div>
}

@code {
    private List<WorkoutPlan> workouts = new();
    private string newPlanName;

    protected override async Task OnInitializedAsync()
    {
        workouts = await WorkoutService.GetAllWorkoutsAsync();
    }

    private async Task CreateWorkout()
    {
        if (!string.IsNullOrWhiteSpace(newPlanName))
        {
            var plan = new WorkoutPlan { Name = newPlanName };
            await WorkoutService.AddWorkoutAsync(plan);

            // Liste neu zuweisen, damit Blazor rendert
            workouts = workouts.Append(plan).ToList();

            newPlanName = "";
        }
    }


    private void AddExercise(WorkoutPlan plan)
    {
        if (!string.IsNullOrWhiteSpace(plan.NewExerciseName) && plan.NewExerciseSets > 0)
        {
            var newExercise = new Exercise
            {
                Name = plan.NewExerciseName,
                Sets = plan.NewExerciseSets,
                WeightKg = plan.NewExerciseWeight
            };

            // ‚ö° neue Liste zuweisen, damit Blazor neu rendert
            plan.Exercises = plan.Exercises.Append(newExercise).ToList();

            plan.NewExerciseName = "";
            plan.NewExerciseSets = 0;
            plan.NewExerciseWeight = 0;
        }
    }

}
